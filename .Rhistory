setwd("~/Documents/Github/Japan.R2023")
library(tidyverse)
library(lubridate)
library(ggplot2)
# Macの文字化け対策
# theme_set( theme_bw(base_family = "HiraKakuProN-W3"))
runif(n = 1, min = 0, max = 100)
sales <- read_csv("./data/sale_type.csv")
telephone <- sales %>%
drop_na() %>%
nest( data = -year ) %>%
mutate( tele = map_dbl(data, function(df){sum(df$telephone)}) )
ggplot(data = sales) +
geom_area( mapping = aes(x = year, y = gross / 1000000000000, fill = place) ) +
geom_line(data = telephone, mapping=aes(x = year, y = tele / 1000000000000)) +
labs(title="競艇の年間売上(2000-22)") +
xlab("年度") + ylab("兆円") + ylim(0,3)
library(tidyverse)
library(lubridate)
library(ggplot2)
# Macの文字化け対策
theme_set( theme_bw(base_family = "HiraKakuProN-W3"))
sales <- read_csv("./data/sale_type.csv")
telephone <- sales %>%
drop_na() %>%
nest( data = -year ) %>%
mutate( tele = map_dbl(data, function(df){sum(df$telephone)}) )
ggplot(data = sales) +
geom_area( mapping = aes(x = year, y = gross / 1000000000000, fill = place) ) +
geom_line(data = telephone, mapping=aes(x = year, y = tele / 1000000000000)) +
labs(title="競艇の年間売上(2000-22)") +
xlab("年度") + ylab("兆円") + ylim(0,3)
res <- data.frame( A = rep(0, times = 1000) )
for(i in 1:1000){
res$A[i] <- runif(n = 1, min = 0, max = 100)
}
ggplot(data = res) +
geom_histogram( mapping = aes(x = A) )
res <- data.frame(
A = rep(0, times = 1000),
B = rep(0, times = 1000),
C = rep(0, times = 1000)
)
for(i in 1:1000){
res$A[i] <- runif(n = 1, min = 0, max = 100)
res$B[i] <- runif(n = 1, min = 0, max = 100)
res$C[i] <- runif(n = 1, min = 0, max = 100)
}
ggplot( data = res %>% pivot_longer( cols = c("A","B","C") ) ) +
geom_histogram(mapping = aes(x = value)) +
facet_grid(~name)
res <- data.frame(
A = rep(0, times = 1000),
B = rep(0, times = 1000),
C = rep(0, times = 1000)
)
i = 1
while( i <= 1000 ) {
a <- runif(n = 1, min = 0, max = 100)
b <- runif(n = 1, min = 0, max = 100)
c <- runif(n = 1, min = 0, max = 100)
if( a > b && b > c ) { # 採用する
res$A[i] <- a
res$B[i] <- b
res$C[i] <- c
i = i + 1
} else { # 不採用、やり直し
next
}
}
ggplot( data = res %>% pivot_longer( cols = c("A","B","C") ) ) +
geom_histogram(mapping = aes(x = value)) +
facet_grid(~name)
res <- data.frame(
A = rep(0, times = 1000),
B = rep(0, times = 1000),
C = rep(0, times = 1000)
)
i = 1
while( i <= 1000 ) {
a <- rnorm(n = 1, mean = 60, sd = 15)
b <- rnorm(n = 1, mean = 60, sd = 15)
c <- rnorm(n = 1, mean = 60, sd = 15)
# [0,100]の範囲外なら不採用
if (a < 0 || a > 100 || b < 0 || b > 100 || c < 0 || c > 100) next
if( a > b && b > c ) { # 採用する
res$A[i] <- a
res$B[i] <- b
res$C[i] <- c
i = i + 1
} else { # 不採用、やり直し
next
}
}
ggplot( data = res %>% pivot_longer( cols = c("A","B","C") ) ) +
geom_histogram(mapping = aes(x = value)) +
facet_grid(~name)
res <- data.frame(
A = rep(0, times = 1000),
B = rep(0, times = 1000),
C = rep(0, times = 1000)
)
i = 1
while( i <= 1000 ) {
a <- runif(n = 1, min = 0, max = 100)
b <- runif(n = 1, min = 0, max = 100)
c <- runif(n = 1, min = 0, max = 100)
rand_for_1 <- rnorm(3, 0, 5) # １回目の３人の変動分
rand_for_2 <- rnorm(3, 0, 5) # ２回目の３人の変動分
if(
# 第１回
( a + rand_for_1[1] > b + rand_for_1[2] && b + rand_for_1[2] > c + rand_for_1[3] ) &&
# 第２回
( b + rand_for_2[2] > a + rand_for_2[1] && a + rand_for_2[1] > c + rand_for_2[3] )
) { # 採用する
res$A[i] <- a
res$B[i] <- b
res$C[i] <- c
i = i + 1
} else { # 不採用、やり直し
next
}
}
ggplot( data = res %>% pivot_longer( cols = c("A","B","C") ) ) +
geom_histogram(mapping = aes(x = value)) +
facet_grid(~name)
race_data <- read_csv("./data/data.csv")
race_data
library(cmdstanr)
library(bayesplot)
library(posterior)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
cmdstan_path()
library(cmdstanr)
library(bayesplot)
library(posterior)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
cmdstan_path()
racer_indice <- sort( unique( race_data$num ) )
nested_ordered_data <- race_data %>%
nest( data = -c(race_id) ) %>%
mutate( ordered = map(data, function(df){
return(
df %>% arrange( result ) %>%
mutate( rank = row_number() ) %>%
mutate( racer_order = order(rank) )
)
}) ) %>%
select( -data ) %>%
mutate( size = map_int(ordered, nrow) ) %>%
mutate( start_index = cumsum(size) - size + 1 ) %>%
mutate( end_index = cumsum(size) )
nRace <- nested_ordered_data %>% nrow()
start_index <- nested_ordered_data$start_index
end_index   <- nested_ordered_data$end_index
race_sizes  <- nested_ordered_data$size
ordered_data <- nested_ordered_data %>%
unnest( ordered ) %>%
mutate( racer_index = match(num, racer_indice) ) %>%
select( race_id, num, racer_index, lane, racer_order )
ordered_data
data_list <-list( # モデルに渡すデータ
nRacer      = length( racer_indice ),
nRace       = nRace,
nRow        = nrow( ordered_data ),
race_order  = ordered_data$racer_order,
racer_index = ordered_data$racer_index,
start_index = start_index,
end_index   = end_index,
race_size   = race_sizes
)
# モデルをコンパイル
compiled_model <- cmdstan_model("./models/model01.stan")
compiled_model$compile(force_recompile = T, cpp_options = list(stan_threads = TRUE))
# 当てはめ
fit <- compiled_model$sample(
data = data_list,
seed = 999,
iter_warmup = 200,
iter_sampling = 1000,
chains = 2, parallel_chains = 2, threads_per_chain = 4,
max_treedepth = 20,
refresh = 100 # print update every 100 iters
)
fit$draws(c("sigma")) %>% mcmc_dens() + labs(title ="sigmaの分布")
match(4320, racer_indice)
ggplot( data = fit$draws("racers") %>% as_draws_df() ) +
geom_density(aes(x = `racers[1]`),  colour = "black", fill = "white", alpha = 0.3) +
geom_density(aes(x = `racers[2]`),  colour = "black", fill = "white", alpha = 0.3) +
geom_density(aes(x = `racers[3]`),  colour = "black", fill = "white", alpha = 0.3) +
geom_density(aes(x = `racers[27]`), colour = "blue", fill = "blue", alpha = 0.3) +
labs(title ="選手の「実力」", x = "racers")
ratio_rank_lanes <- read_csv("./data/rank_cases.csv") %>%
drop_na() %>%
nest( data = c(-rank1) ) %>%
mutate( n_rank = map_int(data, function(df){ sum(df$n) }) ) %>%
unnest( data ) %>%
mutate( ratio_in_rank1 = n / n_rank )
d <- ratio_rank_lanes %>% select( rank1, rank2, rank3, ratio_in_rank1 )
d
ggplot(data = d %>% filter(rank1 == 1) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="１号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
ggplot(data = d %>% filter(rank1 == 2) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="２号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
ggplot(data = d %>% filter(rank1 == 3) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="３号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
ggplot(data = d %>% filter(rank1 == 4) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="４号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
ggplot(data = d %>% filter(rank1 == 5) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="５号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
ggplot(data = d %>% filter(rank1 == 6) ) +
geom_tile( mapping = aes(x = rank2, y = rank3, fill = ratio_in_rank1) ) +
scale_fill_gradient(low = "white", high = "darkred") +
labs(x="２着になった枠", y="３着になった枠", title="６号艇が１着の場合") +
guides(fill =guide_legend(title = "比率") )
